abstract class Cake {
	String name; 
	String[] topping;
	String[] toppingOrder;
	double priceSmall;
	double priceMedium; 
	double priceBig; 
	double totalPrice; 
	int size;
	int quantity;
	
	Cake(String i){
		name = i;
  }
    
	abstract void setCake(String[] topping, double priceSmall, double priceMedium, double priceBig);

	void orderCake(String[] toppingOrder, int quantity, int size){
		this.toppingOrder = toppingOrder;
		this.quantity = quantity;
		this.size = size;
	}
   
   String getName(){
      return name;
   }

	double getSizePrice(int size, double priceSmall, double priceMedium, double priceBig) {
      double sizeprice = 0.00;
		if(size == 1) {
			sizeprice = priceSmall;
		}else if(size == 2) {
			sizeprice = priceMedium;
		}else {
			sizeprice = priceBig;
		}
      return sizeprice;
	}
	
	double getTotalPrice() {
		double totalPrice = (getSizePrice(size, priceSmall, priceMedium, priceBig) * quantity) + (toppingOrder.length * 10);
		return totalPrice;
	}
	
	String getSize() {
      String cakesize = "";
		if(size == 1) {
			cakesize = "Small";
		}else if(size == 2) {
			cakesize = "Medium";
		}else {
			cakesize = "Big";
		}
      return cakesize;
	}
	
	void printCake() {
		System.out.println("------------------------------");
		System.out.println("          Cake Menu           ");
		System.out.println("------------------------------");
      System.out.println(name + " with available toppings:");
       for(int i = 0; i < topping.length; i++){
          System.out.println((i+1) + ") " + topping[i]);
      }
		System.out.println("");
		System.out.println("Price:");
		System.out.println("[1] Small  : RM45.00");
		System.out.println("[2] Medium : RM65.00");
		System.out.println("[3] Big    : RM80.00");
	}
	
	void printOrder() {
		System.out.println("\nCake Order detail:");
		System.out.println("-------------------------------------");
	  System.out.println("Topping: ");
      for(int i = 0; i < toppingOrder.length; i++){
          System.out.print((i+1) + ")" + toppingOrder[i] + "   ");
      }
    System.out.println("\n");
    System.out.println("Size   : " + getSize());
	  System.out.println("-------------------------------------");
    System.out.printf("Total Price: RM %.2f", getTotalPrice());
	  System.out.println("\n-------------------------------------");	
   }
	
}
class BlackForest extends Cake{
   BlackForest(String name){
   super(name);
   }
   
   void setCake(String[] topping, double priceSmall, double priceMedium, double priceBig){
      this.topping = topping;
      this.priceSmall = priceSmall;
      this.priceMedium = priceMedium;
      this.priceBig = priceBig;
   }
}

public class TestCake1{
 public static void main(String args[]){
 Cake c = new BlackForest("BlackForest");
 String[] topping = {"Chocolate", "Cherries", "Whipped Cream"};
 c.setCake(topping, 45.00, 65.00, 80.00);
 c.printCake();

 String[] order = {"Chocolate", "Cherries"};
 c.orderCake(order, 1, 2);
 c.printOrder();
 }
}
